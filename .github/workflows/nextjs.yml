name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        # if your app isnâ€™t at the repo root,
        # adjust this path
        working-directory: ./jacoposlist

    steps:
      - uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-pm
        run: |
          if [ -f yarn.lock ]; then
            echo "manager=yarn"    >> $GITHUB_OUTPUT
            echo "installCmd=install"     >> $GITHUB_OUTPUT
            echo "runCmd=next"   >> $GITHUB_OUTPUT
          elif [ -f package-lock.json ]; then
            echo "manager=npm"     >> $GITHUB_OUTPUT
            echo "installCmd=ci"         >> $GITHUB_OUTPUT
            echo "runCmd=npx next" >> $GITHUB_OUTPUT
          else
            echo "ðŸš¨ No lockfile found!" >&2
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: ${{ steps.detect-pm.outputs.manager }}
          cache-dependency-path: ${{ steps.detect-pm.outputs.manager == 'yarn' && 'jacoposlist/yarn.lock' || 'jacoposlist/package-lock.json' }}


      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json','**/yarn.lock') }}-${{ hashFiles('**/*.js','**/*.ts','**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json','**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.detect-pm.outputs.manager }} ${{ steps.detect-pm.outputs.installCmd }}

      - name: Build & Export
        run: |
          # build your app
          ${{ steps.detect-pm.outputs.runCmd }} build
          # export to /out for GitHub Pages
          ${{ steps.detect-pm.outputs.manager }} run export

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
